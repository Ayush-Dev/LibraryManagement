/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package libraryapp;

import com.sun.glass.events.KeyEvent;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import libraryapp.dao.BookDAO;
import libraryapp.dao.StudentDAO;
import libraryapp.pojo.BookPojo;
import libraryapp.pojo.IssueBookPojo;
import libraryapp.pojo.StudentPojo;

/**
 *
 * @author Ayush's HP
 */
public class IssueBook extends javax.swing.JFrame {

    /**
     * Creates new form IssueBook
     */
    public IssueBook() {
        initComponents();
        this.setLocationRelativeTo(null);
        Toolkit t = Toolkit.getDefaultToolkit();
        Image img;
        img = t.getImage("src\\libraryapp\\appicons\\appSoftware_icon1.png");
        setIconImage(img);
        jTextFieldBName.setEditable(false);
        jTextFieldStudentName.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextFieldBCode = new javax.swing.JTextField();
        jTextFieldBName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextDescription = new javax.swing.JTextArea();
        jTextFieldAccID = new javax.swing.JTextField();
        jTextFieldStudentName = new javax.swing.JTextField();
        jDateIssue = new com.toedter.calendar.JDateChooser();
        jDateReturn = new com.toedter.calendar.JDateChooser();
        jLabelBookSearch = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButtonClearAll = new javax.swing.JButton();
        jButtonIssueBook = new javax.swing.JButton();
        jButtonBookReturned = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Issue Book");

        jPanel3.setBackground(new java.awt.Color(225, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel20.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel20.setText("Student ID:");

        jLabel21.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel21.setText("Student Name:");

        jLabel24.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel24.setText("Description:");

        jLabel22.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel22.setText("Issue Date:");

        jLabel23.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel23.setText("Return Date:");

        jLabel14.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel14.setText("Book Code:");

        jLabel19.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel19.setText("Book Name:");

        jTextFieldBCode.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldBCode.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextFieldBCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldBCodeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldBCodeFocusLost(evt);
            }
        });
        jTextFieldBCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldBCodeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldBCodeKeyTyped(evt);
            }
        });

        jTextFieldBName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldBName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTextDescription.setColumns(20);
        jTextDescription.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextDescription.setRows(5);
        jTextDescription.setBorder(null);
        jScrollPane1.setViewportView(jTextDescription);

        jTextFieldAccID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldAccID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextFieldAccID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldAccIDFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldAccIDFocusLost(evt);
            }
        });
        jTextFieldAccID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldAccIDKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldAccIDKeyTyped(evt);
            }
        });

        jTextFieldStudentName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldStudentName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jDateIssue.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jDateIssue.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jDateReturn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jDateReturn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jDateReturn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDateIssue, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldStudentName, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextFieldAccID, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextFieldBName, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextFieldBCode, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldBCode, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldBName, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldAccID, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateIssue, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDateReturn, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabelBookSearch.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        jLabelBookSearch.setText("Issue Book");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/libraryapp/appicons/book-4.png"))); // NOI18N

        jButtonClearAll.setBackground(new java.awt.Color(0, 198, 174));
        jButtonClearAll.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonClearAll.setText("Clear All");
        jButtonClearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearAllActionPerformed(evt);
            }
        });

        jButtonIssueBook.setBackground(new java.awt.Color(0, 198, 174));
        jButtonIssueBook.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonIssueBook.setText("Issue Book");
        jButtonIssueBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIssueBookActionPerformed(evt);
            }
        });

        jButtonBookReturned.setBackground(new java.awt.Color(0, 198, 174));
        jButtonBookReturned.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonBookReturned.setText("Return Book");
        jButtonBookReturned.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBookReturnedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabelBookSearch)
                .addGap(119, 119, 119))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jButtonIssueBook, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(jButtonBookReturned)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonClearAll, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelBookSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(23, 23, 23)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonIssueBook, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonClearAll, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBookReturned, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldBCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBCodeKeyTyped
        char c;
        c = evt.getKeyChar();
        String code;
        code = jTextFieldBCode.getText();
        if (c == KeyEvent.VK_ENTER) {
            return;
        }
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACKSPACE || c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldBCodeKeyTyped

    private void jTextFieldBCodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldBCodeFocusGained
        jTextFieldBCode.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    }//GEN-LAST:event_jTextFieldBCodeFocusGained

    private void jTextFieldBCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldBCodeFocusLost
        if (jTextFieldBCode.getText().trim().isEmpty()) {
            jTextFieldBCode.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
            return;
        }
        try {
            BookPojo book = new BookPojo(Integer.parseInt(jTextFieldBCode.getText().trim()));
            String bookName = BookDAO.getBookName(book);
            if (bookName.equals("--BOOK NOT FOUND !!--")) {
                jTextFieldBName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
                jTextFieldBName.setText(bookName);
                return;
            }
            jTextFieldBName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            jTextFieldBName.setText(bookName);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jTextFieldBCodeFocusLost

    private void jTextFieldAccIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldAccIDKeyTyped
        char c;
        c = evt.getKeyChar();
        String id;
        id = jTextFieldAccID.getText().trim();
        if (c == KeyEvent.VK_ENTER) {
            return;
        }
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACKSPACE || c == KeyEvent.VK_DELETE) || id.length() > 10) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldAccIDKeyTyped

    private void jTextFieldAccIDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldAccIDFocusGained
        jTextFieldAccID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    }//GEN-LAST:event_jTextFieldAccIDFocusGained

    private void jTextFieldAccIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldAccIDFocusLost
        if (jTextFieldAccID.getText().trim().isEmpty()) {
            jTextFieldAccID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
            return;
        }
        try {
            StudentPojo student = new StudentPojo(jTextFieldAccID.getText().trim());
            String name = StudentDAO.getStudentNameFromID(student);
            if (name.equals("--STUDENT NOT FOUND !!--")) {
                jTextFieldStudentName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
                jTextFieldStudentName.setText(name);
                return;
            }
            jTextFieldStudentName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            jTextFieldStudentName.setText(name);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jTextFieldAccIDFocusLost

    private void jTextFieldBCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBCodeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jTextFieldAccID.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldBCodeKeyPressed

    private void jTextFieldAccIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldAccIDKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jDateIssue.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldAccIDKeyPressed

    private void jButtonClearAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearAllActionPerformed
        jTextFieldBCode.setText(null);
        jTextFieldBName.setText(null);
        jTextFieldAccID.setText(null);
        jTextFieldStudentName.setText(null);
        jDateIssue.setDate(null);
        jDateReturn.setDate(null);
        jTextDescription.setText(null);
        jTextFieldBCode.requestFocus();
    }//GEN-LAST:event_jButtonClearAllActionPerformed

    private void jButtonIssueBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIssueBookActionPerformed
        if(jTextFieldBName.getText().trim().equals("--BOOK NOT FOUND !!--")){
            JOptionPane.showMessageDialog(null, "Book Not Found", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(jTextFieldStudentName.getText().trim().equals("--STUDENT NOT FOUND !!--")){
            JOptionPane.showMessageDialog(null, "Student Not Found", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(jTextFieldBCode.getText().trim().isEmpty() || jTextFieldAccID.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Empty Fields !!", "ERROR", JOptionPane.ERROR_MESSAGE);
            jTextFieldBCode.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
            return;
        }
        if(jTextFieldAccID.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Empty Fields !!", "ERROR", JOptionPane.ERROR_MESSAGE);
            jTextFieldAccID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
            return;
        }
        if(jDateIssue.getDate() == null || jDateReturn.getDate() == null){
            JOptionPane.showMessageDialog(null, "Empty Date Fields !!", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(jDateIssue.getDate().compareTo(jDateReturn.getDate()) > 0){
            JOptionPane.showMessageDialog(null, "Enter a Valid Return Date !!", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try{
            BookPojo book = new BookPojo(Integer.parseInt(jTextFieldBCode.getText().trim()));
            IssueBookPojo ibook = new IssueBookPojo(Integer.parseInt(jTextFieldBCode.getText().trim()),jTextFieldAccID.getText().trim(), jDateIssue.getDate(), jDateReturn.getDate());
            if(BookDAO.validateFreeBook(book) && BookDAO.issueBook(ibook)){
                JOptionPane.showMessageDialog(null, "Book successfully issued to " + jTextFieldStudentName.getText(), "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
                Dashboard d = new Dashboard();
                d.setLables();
                jTextFieldBCode.setText(null);
                jTextFieldBName.setText(null);
                jTextFieldAccID.setText(null);
                jTextFieldStudentName.setText(null);
                jDateIssue.setDate(null);
                jDateReturn.setDate(null);
                jTextDescription.setText(null);
                jTextFieldBCode.requestFocus();
            }
            else{
                JOptionPane.showMessageDialog(null, "This Book is already Allotted !", "CANNOT ISSUE", JOptionPane.ERROR_MESSAGE);
            }
        }
        catch(SQLException ex){
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Some Error Occured Contact Admin");
        }
    }//GEN-LAST:event_jButtonIssueBookActionPerformed

    private void jButtonBookReturnedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBookReturnedActionPerformed
        if(jTextFieldBName.getText().trim().equals("--BOOK NOT FOUND !!--")){
            JOptionPane.showMessageDialog(null, "Book Not Found", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(jTextFieldStudentName.getText().trim().equals("--STUDENT NOT FOUND !!--")){
            JOptionPane.showMessageDialog(null, "Student Not Found", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(jTextFieldBCode.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Empty Fields !!", "ERROR", JOptionPane.ERROR_MESSAGE);
            jTextFieldBCode.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
            return;
        }
        if(jTextFieldAccID.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Empty Fields !!", "ERROR", JOptionPane.ERROR_MESSAGE);
            jTextFieldAccID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
            return;
        }
        try{
            IssueBookPojo ibook = new IssueBookPojo(Integer.parseInt(jTextFieldBCode.getText().trim()),jTextFieldAccID.getText().trim());
            if(BookDAO.validateBookIssue(ibook) && BookDAO.returnBook(ibook)){
                JOptionPane.showMessageDialog(null, "Book Withdrawn", "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
                Dashboard d = new Dashboard();
                d.setLables();
                jTextFieldBCode.setText(null);
                jTextFieldBName.setText(null);
                jTextFieldAccID.setText(null);
                jTextFieldStudentName.setText(null);
                jDateIssue.setDate(null);
                jDateReturn.setDate(null);
                jTextDescription.setText(null);
                jTextFieldBCode.requestFocus();
                return;
            }
            JOptionPane.showMessageDialog(null, "Book is not issued by " + jTextFieldStudentName.getText(), "ERROR!", JOptionPane.ERROR_MESSAGE);
        }
        catch(SQLException ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButtonBookReturnedActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IssueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new IssueBook().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBookReturned;
    private javax.swing.JButton jButtonClearAll;
    private javax.swing.JButton jButtonIssueBook;
    private com.toedter.calendar.JDateChooser jDateIssue;
    private com.toedter.calendar.JDateChooser jDateReturn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabelBookSearch;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextDescription;
    private javax.swing.JTextField jTextFieldAccID;
    private javax.swing.JTextField jTextFieldBCode;
    private javax.swing.JTextField jTextFieldBName;
    private javax.swing.JTextField jTextFieldStudentName;
    // End of variables declaration//GEN-END:variables
}
